<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Reflection | Sina Iravanian]]></title>
  <link href="http://sinairv.github.io/blog/categories/reflection/atom.xml" rel="self"/>
  <link href="http://sinairv.github.io/"/>
  <updated>2015-10-05T00:23:45+11:00</updated>
  <id>http://sinairv.github.io/</id>
  <author>
    <name><![CDATA[Sina Iravanian]]></name>
    <email><![CDATA[sina.iravanian@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Assigning Values to Private Fields Using Reflection]]></title>
    <link href="http://sinairv.github.io/blog/2010/03/06/assigning-values-to-private-fields-using-reflection/"/>
    <updated>2010-03-06T15:19:38+11:00</updated>
    <id>http://sinairv.github.io/blog/2010/03/06/assigning-values-to-private-fields-using-reflection</id>
    <content type="html"><![CDATA[<p>Suppose that you have a class with various non-public fields, e.g., the class named <code>ClassToTest</code> below servers as a good example.</p>

<p>```csharp
public class ClassToTest
{
    public int SomeNumber { get; set; }</p>

<pre><code>private int m_somePrivateProperty { get; set; }
private int m_somePrivateVar;

private static int s_someStaticNumber; } ```
</code></pre>

<p>And suppose that we desire to assign some value to the private variable <code>m_somePrivateVar</code>, and the private property <code>m_somePrivateProperty</code>. The approach is to iterate through the fields of the <code>ClassToTest</code> type to find the desired field. If it is a variable we should type-cast it to <code>FieldInfo</code>, and if it is a property we should type-cast it to <code>PropertyInfo</code>. Then we should call the <code>SetValue</code> method appropriately. This is shown below:</p>

<p>```csharp
ClassToTest c = new ClassToTest();</p>

<p>Type t = typeof(ClassToTest);
foreach (var member in t.GetMembers(BindingFlags.Instance |
                                    BindingFlags.NonPublic | 
                                    BindingFlags.Public))
{
    if (member.Name == “m_somePrivateVar”)
    {
        // changing the variable
        FieldInfo fi = (FieldInfo)member;
        fi.SetValue(c, 18);
    }
    else if (member.Name == “m_somePrivateProperty”)
    {
        // changing the property
        PropertyInfo pi = (PropertyInfo)member;
        pi.SetValue(c, 13, null);
    }
}
```</p>

<p>Here we have successfully assigned values to selected private fields of our class.</p>
]]></content>
  </entry>
  
</feed>
