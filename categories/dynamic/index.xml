<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dynamic on Sina&#39;s Blog</title>
    <link>https://sinairv.github.io/categories/dynamic/</link>
    <description>Recent content in Dynamic on Sina&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jul 2012 17:20:53 +1000</lastBuildDate>
    
	<atom:link href="https://sinairv.github.io/categories/dynamic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An example for C# dynamic in action</title>
      <link>https://sinairv.github.io/2012/07/23/an-example-for-c#-dynamic-in-action/</link>
      <pubDate>Mon, 23 Jul 2012 17:20:53 +1000</pubDate>
      
      <guid>https://sinairv.github.io/2012/07/23/an-example-for-c#-dynamic-in-action/</guid>
      <description>Recently I was involved with enabling validation for a Windows Forms form containing several pages shown through a tree view. There were one user control defined for each page, therefore whenever a node in tree-view got activated, an instance of that user-control were shown. The user-controls did not have a common user-defined parent base-class or interface. The author of the existing code had defined a Save method in each control separately which performed updating data with values entered in the forms.</description>
    </item>
    
  </channel>
</rss>